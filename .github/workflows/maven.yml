name: Build Native

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      # --- Setup GraalVM instead of Temurin ---
      - name: Set up GraalVM for Java 17
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'
          distribution: 'graalvm-community'
          components: 'native-image'
          cache: maven
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # --- Verify GraalVM is active ---
      - name: Check Java and native-image
        run: |
          java -version
          native-image --version

      # --- Build native executable ---
      - name: Build native image
        run: |
          export MAVEN_OPTS="-Xmx2G"
          export GRAALVM_OPTS="--no-fallback -J-Xmx5G"
          mvn -Pnative -DskipTests -e -X -DspringAot.excludeAotTestGeneration=true clean native:compile


      # --- Save the built native binary as an artifact ---
      - name: Upload native binary
        uses: actions/upload-artifact@v4
        with:
          name: native-binary
          path: target/*

      # --- Also upload build logs if you want to inspect them ---
      - name: Upload build logs
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: target/native/compile.log

  build-windows:
    runs-on: windows-latest
    timeout-minutes: 40

    steps:
      - uses: actions/checkout@v4

      # --- Set up GraalVM for Windows ---
      - name: Set up GraalVM for Java 17 (Windows)
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'
          distribution: 'graalvm-community'
          components: 'native-image'
          cache: maven
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # --- Verify environment ---
      - name: Check Java and native-image
        shell: pwsh
        run: |
          java -version
          native-image --version

      # --- Build native image (Windows) ---
      - name: Build native executable
        shell: pwsh
        run: |
          # Increase memory limits to avoid OOM
          $env:MAVEN_OPTS = "-Xmx2G"
          $env:GRAALVM_OPTS = "--no-fallback -J-Xmx5G"
      
          & mvn '-Pnative' '-DskipTests' '-e' '-X' '-DspringAot.excludeAotTestGeneration=true' '-Djline.terminal=jna' 'clean' 'native:compile'

      # --- Upload the generated Windows binary ---
      - name: Upload Windows native binary
        uses: actions/upload-artifact@v4
        with:
          name: native-binary-windows
          path: target/*.exe

      # --- Optionally upload logs ---
      - name: Upload build logs
        uses: actions/upload-artifact@v4
        with:
          name: build-logs-windows
          path: target/native/compile.log

